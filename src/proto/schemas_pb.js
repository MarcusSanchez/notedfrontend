// @generated by protoc-gen-es v1.7.2
// @generated from file schemas.proto (package schemas, syntax proto2)
/* eslint-disable */
// @ts-nocheck

import { proto2 } from "@bufbuild/protobuf";
import { EnumRules, StringRules } from "./buf/validate/validate_pb.js";

/**
 * @generated from extension: optional bool not_unspecified = 1000;
 */
export const not_unspecified = proto2.makeExtension(
  "schemas.not_unspecified", 
  EnumRules, 
  { no: 1000, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool username = 1001;
 */
export const username = proto2.makeExtension(
  "schemas.username", 
  StringRules, 
  { no: 1001, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool name = 1002;
 */
export const name = proto2.makeExtension(
  "schemas.name", 
  StringRules, 
  { no: 1002, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool email = 1003;
 */
export const email = proto2.makeExtension(
  "schemas.email", 
  StringRules, 
  { no: 1003, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool password = 1004;
 */
export const password = proto2.makeExtension(
  "schemas.password", 
  StringRules, 
  { no: 1004, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool company_code = 1005;
 */
export const company_code = proto2.makeExtension(
  "schemas.company_code", 
  StringRules, 
  { no: 1005, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool patient_name = 1006;
 */
export const patient_name = proto2.makeExtension(
  "schemas.patient_name", 
  StringRules, 
  { no: 1006, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool patient_additional_information = 1007;
 */
export const patient_additional_information = proto2.makeExtension(
  "schemas.patient_additional_information", 
  StringRules, 
  { no: 1007, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool goal = 1008;
 */
export const goal = proto2.makeExtension(
  "schemas.goal", 
  StringRules, 
  { no: 1008, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool event_description = 1009;
 */
export const event_description = proto2.makeExtension(
  "schemas.event_description", 
  StringRules, 
  { no: 1009, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool choice = 1010;
 */
export const choice = proto2.makeExtension(
  "schemas.choice", 
  StringRules, 
  { no: 1010, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool behavior_description = 1011;
 */
export const behavior_description = proto2.makeExtension(
  "schemas.behavior_description", 
  StringRules, 
  { no: 1011, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

/**
 * @generated from extension: optional bool note_additional_information = 1012;
 */
export const note_additional_information = proto2.makeExtension(
  "schemas.note_additional_information", 
  StringRules, 
  { no: 1012, kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
);

