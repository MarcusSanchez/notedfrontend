// @generated by protoc-gen-connect-es v1.4.0
// @generated from file note.proto (package note.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddChoiceToEventRequest, AddEventRequest, AddMethodToEventRequest, AddStepRequest, CreateNoteRequest, CreateNoteResponse, DeleteNoteRequest, GenerateNoteContentRequest, GetNoteRequest, GetNoteResponse, ListNotesRequest, ListNotesResponse, ListNurseNotesRequest, ListNurseNotesResponse, RemoveChoiceFromEventRequest, RemoveEventRequest, RemoveMethodFromEventRequest, RemoveStepRequest, UpdateChoiceInEventRequest, UpdateEventDescriptionRequest, UpdateNoteRequest } from "./note_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service note.v1.NoteTakingService
 */
export declare const NoteTakingService: {
  readonly typeName: "note.v1.NoteTakingService",
  readonly methods: {
    /**
     * @generated from rpc note.v1.NoteTakingService.CreateNote
     */
    readonly createNote: {
      readonly name: "CreateNote",
      readonly I: typeof CreateNoteRequest,
      readonly O: typeof CreateNoteResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.UpdateNote
     */
    readonly updateNote: {
      readonly name: "UpdateNote",
      readonly I: typeof UpdateNoteRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.DeleteNote
     */
    readonly deleteNote: {
      readonly name: "DeleteNote",
      readonly I: typeof DeleteNoteRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.GetNote
     */
    readonly getNote: {
      readonly name: "GetNote",
      readonly I: typeof GetNoteRequest,
      readonly O: typeof GetNoteResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.GenerateNoteContent
     */
    readonly generateNoteContent: {
      readonly name: "GenerateNoteContent",
      readonly I: typeof GenerateNoteContentRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.ListNotes
     */
    readonly listNotes: {
      readonly name: "ListNotes",
      readonly I: typeof ListNotesRequest,
      readonly O: typeof ListNotesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.ListNurseNotes
     */
    readonly listNurseNotes: {
      readonly name: "ListNurseNotes",
      readonly I: typeof ListNurseNotesRequest,
      readonly O: typeof ListNurseNotesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.AddEvent
     */
    readonly addEvent: {
      readonly name: "AddEvent",
      readonly I: typeof AddEventRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.RemoveEvent
     */
    readonly removeEvent: {
      readonly name: "RemoveEvent",
      readonly I: typeof RemoveEventRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.UpdateEventDescription
     */
    readonly updateEventDescription: {
      readonly name: "UpdateEventDescription",
      readonly I: typeof UpdateEventDescriptionRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.AddChoiceToEvent
     */
    readonly addChoiceToEvent: {
      readonly name: "AddChoiceToEvent",
      readonly I: typeof AddChoiceToEventRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.RemoveChoiceFromEvent
     */
    readonly removeChoiceFromEvent: {
      readonly name: "RemoveChoiceFromEvent",
      readonly I: typeof RemoveChoiceFromEventRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.UpdateChoiceInEvent
     */
    readonly updateChoiceInEvent: {
      readonly name: "UpdateChoiceInEvent",
      readonly I: typeof UpdateChoiceInEventRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.AddMethodToEvent
     */
    readonly addMethodToEvent: {
      readonly name: "AddMethodToEvent",
      readonly I: typeof AddMethodToEventRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.RemoveMethodFromEvent
     */
    readonly removeMethodFromEvent: {
      readonly name: "RemoveMethodFromEvent",
      readonly I: typeof RemoveMethodFromEventRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.AddStep
     */
    readonly addStep: {
      readonly name: "AddStep",
      readonly I: typeof AddStepRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc note.v1.NoteTakingService.RemoveStep
     */
    readonly removeStep: {
      readonly name: "RemoveStep",
      readonly I: typeof RemoveStepRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
  }
};

