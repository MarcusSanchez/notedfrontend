// @generated by protoc-gen-es v1.7.2
// @generated from file patient.proto (package patient.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum patient.v1.Sex
 */
export declare enum Sex {
  /**
   * @generated from enum value: UnspecifiedSex = 0;
   */
  UnspecifiedSex = 0,

  /**
   * @generated from enum value: Male = 1;
   */
  Male = 1,

  /**
   * @generated from enum value: Female = 2;
   */
  Female = 2,

  /**
   * @generated from enum value: Other = 3;
   */
  Other = 3,
}

/**
 * @generated from enum patient.v1.ServiceType
 */
export declare enum ServiceType {
  /**
   * @generated from enum value: UnspecifiedService = 0;
   */
  UnspecifiedService = 0,

  /**
   * @generated from enum value: Respite = 1;
   */
  Respite = 1,

  /**
   * @generated from enum value: PersonalSupport = 2;
   */
  PersonalSupport = 2,

  /**
   * @generated from enum value: Lifeskills = 3;
   */
  Lifeskills = 3,

  /**
   * @generated from enum value: SupportedLiving = 4;
   */
  SupportedLiving = 4,

  /**
   * @generated from enum value: SupportedEmployment = 5;
   */
  SupportedEmployment = 5,
}

/**
 * @generated from enum patient.v1.DiagnosisType
 */
export declare enum DiagnosisType {
  /**
   * @generated from enum value: UnspecifiedDiagnosis = 0;
   */
  UnspecifiedDiagnosis = 0,

  /**
   * @generated from enum value: Autism = 1;
   */
  Autism = 1,

  /**
   * @generated from enum value: DownSyndrome = 2;
   */
  DownSyndrome = 2,

  /**
   * @generated from enum value: CerebralPalsy = 3;
   */
  CerebralPalsy = 3,

  /**
   * @generated from enum value: IntellectualDisability = 4;
   */
  IntellectualDisability = 4,

  /**
   * @generated from enum value: RettSyndrome = 5;
   */
  RettSyndrome = 5,

  /**
   * @generated from enum value: SpinaBifida = 6;
   */
  SpinaBifida = 6,

  /**
   * @generated from enum value: PraderWilliSyndrome = 7;
   */
  PraderWilliSyndrome = 7,

  /**
   * @generated from enum value: PhelanMcdermidSyndrome = 8;
   */
  PhelanMcdermidSyndrome = 8,
}

/**
 * @generated from enum patient.v1.ListPatientsOrderBy
 */
export declare enum ListPatientsOrderBy {
  /**
   * @generated from enum value: CreatedAtAsc = 0;
   */
  CreatedAtAsc = 0,

  /**
   * @generated from enum value: CreatedAtDesc = 1;
   */
  CreatedAtDesc = 1,

  /**
   * @generated from enum value: LastMonthlyTalkAsc = 2;
   */
  LastMonthlyTalkAsc = 2,

  /**
   * @generated from enum value: LastMonthlyTalkDesc = 3;
   */
  LastMonthlyTalkDesc = 3,
}

/**
 * @generated from message patient.v1.Service
 */
export declare class Service extends Message<Service> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string patient_id = 3;
   */
  patientId: string;

  /**
   * @generated from field: patient.v1.ServiceType service = 2;
   */
  service: ServiceType;

  constructor(data?: PartialMessage<Service>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.Service";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Service;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Service;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Service;

  static equals(a: Service | PlainMessage<Service> | undefined, b: Service | PlainMessage<Service> | undefined): boolean;
}

/**
 * @generated from message patient.v1.Diagnosis
 */
export declare class Diagnosis extends Message<Diagnosis> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string patient_id = 3;
   */
  patientId: string;

  /**
   * @generated from field: patient.v1.DiagnosisType diagnosis = 2;
   */
  diagnosis: DiagnosisType;

  constructor(data?: PartialMessage<Diagnosis>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.Diagnosis";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Diagnosis;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Diagnosis;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Diagnosis;

  static equals(a: Diagnosis | PlainMessage<Diagnosis> | undefined, b: Diagnosis | PlainMessage<Diagnosis> | undefined): boolean;
}

/**
 * @generated from message patient.v1.Goal
 */
export declare class Goal extends Message<Goal> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string patient_id = 2;
   */
  patientId: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Goal>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.Goal";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Goal;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Goal;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Goal;

  static equals(a: Goal | PlainMessage<Goal> | undefined, b: Goal | PlainMessage<Goal> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListedNurse
 */
export declare class ListedNurse extends Message<ListedNurse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<ListedNurse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListedNurse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListedNurse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListedNurse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListedNurse;

  static equals(a: ListedNurse | PlainMessage<ListedNurse> | undefined, b: ListedNurse | PlainMessage<ListedNurse> | undefined): boolean;
}

/**
 * @generated from message patient.v1.Patient
 */
export declare class Patient extends Message<Patient> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string company_id = 2;
   */
  companyId: string;

  /**
   * @generated from field: string first_name = 3;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 4;
   */
  lastName: string;

  /**
   * @generated from field: patient.v1.Sex sex = 5;
   */
  sex: Sex;

  /**
   * @generated from field: repeated patient.v1.Service services = 6;
   */
  services: Service[];

  /**
   * @generated from field: repeated patient.v1.Diagnosis diagnoses = 7;
   */
  diagnoses: Diagnosis[];

  /**
   * @generated from field: repeated patient.v1.Goal goals = 8;
   */
  goals: Goal[];

  /**
   * @generated from field: repeated patient.v1.ListedNurse assigned_nurses = 9;
   */
  assignedNurses: ListedNurse[];

  /**
   * @generated from field: bool has_maladaptive_behaviors = 10;
   */
  hasMaladaptiveBehaviors: boolean;

  /**
   * @generated from field: optional string additional_information = 11;
   */
  additionalInformation?: string;

  /**
   * @generated from field: google.protobuf.Timestamp last_monthly_talk = 12;
   */
  lastMonthlyTalk?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 13;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 14;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Patient>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.Patient";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Patient;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Patient;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Patient;

  static equals(a: Patient | PlainMessage<Patient> | undefined, b: Patient | PlainMessage<Patient> | undefined): boolean;
}

/**
 * @generated from message patient.v1.GetPatientRequest
 */
export declare class GetPatientRequest extends Message<GetPatientRequest> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<GetPatientRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.GetPatientRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPatientRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPatientRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPatientRequest;

  static equals(a: GetPatientRequest | PlainMessage<GetPatientRequest> | undefined, b: GetPatientRequest | PlainMessage<GetPatientRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.GetPatientResponse
 */
export declare class GetPatientResponse extends Message<GetPatientResponse> {
  /**
   * @generated from field: patient.v1.Patient patient = 1;
   */
  patient?: Patient;

  constructor(data?: PartialMessage<GetPatientResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.GetPatientResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPatientResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPatientResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPatientResponse;

  static equals(a: GetPatientResponse | PlainMessage<GetPatientResponse> | undefined, b: GetPatientResponse | PlainMessage<GetPatientResponse> | undefined): boolean;
}

/**
 * @generated from message patient.v1.CreatePatientRequest
 */
export declare class CreatePatientRequest extends Message<CreatePatientRequest> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * @generated from field: bool has_maladaptive_behaviors = 3;
   */
  hasMaladaptiveBehaviors: boolean;

  /**
   * @generated from field: patient.v1.Sex sex = 4;
   */
  sex: Sex;

  /**
   * @generated from field: optional string additional_information = 5;
   */
  additionalInformation?: string;

  /**
   * @generated from field: string token = 6;
   */
  token: string;

  constructor(data?: PartialMessage<CreatePatientRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.CreatePatientRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePatientRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePatientRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePatientRequest;

  static equals(a: CreatePatientRequest | PlainMessage<CreatePatientRequest> | undefined, b: CreatePatientRequest | PlainMessage<CreatePatientRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.CreatePatientResponse
 */
export declare class CreatePatientResponse extends Message<CreatePatientResponse> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  constructor(data?: PartialMessage<CreatePatientResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.CreatePatientResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePatientResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePatientResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePatientResponse;

  static equals(a: CreatePatientResponse | PlainMessage<CreatePatientResponse> | undefined, b: CreatePatientResponse | PlainMessage<CreatePatientResponse> | undefined): boolean;
}

/**
 * @generated from message patient.v1.UpdatePatientRequest
 */
export declare class UpdatePatientRequest extends Message<UpdatePatientRequest> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  /**
   * @generated from field: optional string first_name = 2;
   */
  firstName?: string;

  /**
   * @generated from field: optional string last_name = 3;
   */
  lastName?: string;

  /**
   * @generated from field: optional bool has_maladaptive_behaviors = 4;
   */
  hasMaladaptiveBehaviors?: boolean;

  /**
   * @generated from field: optional patient.v1.Sex sex = 5;
   */
  sex?: Sex;

  /**
   * @generated from field: optional string additional_information = 6;
   */
  additionalInformation?: string;

  /**
   * @generated from field: string token = 7;
   */
  token: string;

  constructor(data?: PartialMessage<UpdatePatientRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.UpdatePatientRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePatientRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePatientRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePatientRequest;

  static equals(a: UpdatePatientRequest | PlainMessage<UpdatePatientRequest> | undefined, b: UpdatePatientRequest | PlainMessage<UpdatePatientRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.DeletePatientRequest
 */
export declare class DeletePatientRequest extends Message<DeletePatientRequest> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<DeletePatientRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.DeletePatientRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePatientRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePatientRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePatientRequest;

  static equals(a: DeletePatientRequest | PlainMessage<DeletePatientRequest> | undefined, b: DeletePatientRequest | PlainMessage<DeletePatientRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.AddGoalRequest
 */
export declare class AddGoalRequest extends Message<AddGoalRequest> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<AddGoalRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.AddGoalRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddGoalRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddGoalRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddGoalRequest;

  static equals(a: AddGoalRequest | PlainMessage<AddGoalRequest> | undefined, b: AddGoalRequest | PlainMessage<AddGoalRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.UpdateGoalRequest
 */
export declare class UpdateGoalRequest extends Message<UpdateGoalRequest> {
  /**
   * @generated from field: string goal_id = 1;
   */
  goalId: string;

  /**
   * @generated from field: string new_description = 2;
   */
  newDescription: string;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<UpdateGoalRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.UpdateGoalRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGoalRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGoalRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGoalRequest;

  static equals(a: UpdateGoalRequest | PlainMessage<UpdateGoalRequest> | undefined, b: UpdateGoalRequest | PlainMessage<UpdateGoalRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.RemoveGoalRequest
 */
export declare class RemoveGoalRequest extends Message<RemoveGoalRequest> {
  /**
   * @generated from field: string goal_id = 1;
   */
  goalId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<RemoveGoalRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.RemoveGoalRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveGoalRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveGoalRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveGoalRequest;

  static equals(a: RemoveGoalRequest | PlainMessage<RemoveGoalRequest> | undefined, b: RemoveGoalRequest | PlainMessage<RemoveGoalRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListPatientGoalsRequest
 */
export declare class ListPatientGoalsRequest extends Message<ListPatientGoalsRequest> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<ListPatientGoalsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListPatientGoalsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPatientGoalsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPatientGoalsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPatientGoalsRequest;

  static equals(a: ListPatientGoalsRequest | PlainMessage<ListPatientGoalsRequest> | undefined, b: ListPatientGoalsRequest | PlainMessage<ListPatientGoalsRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListPatientGoalsResponse
 */
export declare class ListPatientGoalsResponse extends Message<ListPatientGoalsResponse> {
  /**
   * @generated from field: repeated patient.v1.Goal goals = 1;
   */
  goals: Goal[];

  constructor(data?: PartialMessage<ListPatientGoalsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListPatientGoalsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPatientGoalsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPatientGoalsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPatientGoalsResponse;

  static equals(a: ListPatientGoalsResponse | PlainMessage<ListPatientGoalsResponse> | undefined, b: ListPatientGoalsResponse | PlainMessage<ListPatientGoalsResponse> | undefined): boolean;
}

/**
 * @generated from message patient.v1.AddServiceRequest
 */
export declare class AddServiceRequest extends Message<AddServiceRequest> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  /**
   * @generated from field: patient.v1.ServiceType service = 2;
   */
  service: ServiceType;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<AddServiceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.AddServiceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddServiceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddServiceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddServiceRequest;

  static equals(a: AddServiceRequest | PlainMessage<AddServiceRequest> | undefined, b: AddServiceRequest | PlainMessage<AddServiceRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.RemoveServiceRequest
 */
export declare class RemoveServiceRequest extends Message<RemoveServiceRequest> {
  /**
   * @generated from field: string service_id = 1;
   */
  serviceId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<RemoveServiceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.RemoveServiceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveServiceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveServiceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveServiceRequest;

  static equals(a: RemoveServiceRequest | PlainMessage<RemoveServiceRequest> | undefined, b: RemoveServiceRequest | PlainMessage<RemoveServiceRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.AddDiagnosisRequest
 */
export declare class AddDiagnosisRequest extends Message<AddDiagnosisRequest> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  /**
   * @generated from field: patient.v1.DiagnosisType diagnosis = 2;
   */
  diagnosis: DiagnosisType;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<AddDiagnosisRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.AddDiagnosisRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddDiagnosisRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddDiagnosisRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddDiagnosisRequest;

  static equals(a: AddDiagnosisRequest | PlainMessage<AddDiagnosisRequest> | undefined, b: AddDiagnosisRequest | PlainMessage<AddDiagnosisRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.RemoveDiagnosisRequest
 */
export declare class RemoveDiagnosisRequest extends Message<RemoveDiagnosisRequest> {
  /**
   * @generated from field: string diagnosis_id = 1;
   */
  diagnosisId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<RemoveDiagnosisRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.RemoveDiagnosisRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveDiagnosisRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveDiagnosisRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveDiagnosisRequest;

  static equals(a: RemoveDiagnosisRequest | PlainMessage<RemoveDiagnosisRequest> | undefined, b: RemoveDiagnosisRequest | PlainMessage<RemoveDiagnosisRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListPatientsRequest
 */
export declare class ListPatientsRequest extends Message<ListPatientsRequest> {
  /**
   * @generated from field: optional string first_name = 1;
   */
  firstName?: string;

  /**
   * @generated from field: optional string last_name = 2;
   */
  lastName?: string;

  /**
   * @generated from field: optional int32 page = 3;
   */
  page?: number;

  /**
   * @generated from field: optional patient.v1.ListPatientsOrderBy order_by = 4;
   */
  orderBy?: ListPatientsOrderBy;

  /**
   * @generated from field: string token = 5;
   */
  token: string;

  constructor(data?: PartialMessage<ListPatientsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListPatientsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPatientsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPatientsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPatientsRequest;

  static equals(a: ListPatientsRequest | PlainMessage<ListPatientsRequest> | undefined, b: ListPatientsRequest | PlainMessage<ListPatientsRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListedPatient
 */
export declare class ListedPatient extends Message<ListedPatient> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: bool has_maladaptive_behaviors = 4;
   */
  hasMaladaptiveBehaviors: boolean;

  constructor(data?: PartialMessage<ListedPatient>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListedPatient";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListedPatient;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListedPatient;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListedPatient;

  static equals(a: ListedPatient | PlainMessage<ListedPatient> | undefined, b: ListedPatient | PlainMessage<ListedPatient> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListedPatientWithInfo
 */
export declare class ListedPatientWithInfo extends Message<ListedPatientWithInfo> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: patient.v1.ServiceType service = 4;
   */
  service: ServiceType;

  /**
   * @generated from field: int32 service_count = 5;
   */
  serviceCount: number;

  /**
   * @generated from field: google.protobuf.Timestamp last_monthly_talk = 6;
   */
  lastMonthlyTalk?: Timestamp;

  constructor(data?: PartialMessage<ListedPatientWithInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListedPatientWithInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListedPatientWithInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListedPatientWithInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListedPatientWithInfo;

  static equals(a: ListedPatientWithInfo | PlainMessage<ListedPatientWithInfo> | undefined, b: ListedPatientWithInfo | PlainMessage<ListedPatientWithInfo> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListPatientsResponse
 */
export declare class ListPatientsResponse extends Message<ListPatientsResponse> {
  /**
   * @generated from field: repeated patient.v1.ListedPatientWithInfo patients = 1;
   */
  patients: ListedPatientWithInfo[];

  /**
   * @generated from field: int32 total = 2;
   */
  total: number;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: optional int32 next_page = 4;
   */
  nextPage?: number;

  constructor(data?: PartialMessage<ListPatientsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListPatientsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPatientsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPatientsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPatientsResponse;

  static equals(a: ListPatientsResponse | PlainMessage<ListPatientsResponse> | undefined, b: ListPatientsResponse | PlainMessage<ListPatientsResponse> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListNursePatientsRequest
 */
export declare class ListNursePatientsRequest extends Message<ListNursePatientsRequest> {
  /**
   * @generated from field: string nurse_id = 1;
   */
  nurseId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<ListNursePatientsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListNursePatientsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNursePatientsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNursePatientsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNursePatientsRequest;

  static equals(a: ListNursePatientsRequest | PlainMessage<ListNursePatientsRequest> | undefined, b: ListNursePatientsRequest | PlainMessage<ListNursePatientsRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListNursePatientsResponse
 */
export declare class ListNursePatientsResponse extends Message<ListNursePatientsResponse> {
  /**
   * @generated from field: repeated patient.v1.ListedPatient patients = 1;
   */
  patients: ListedPatient[];

  constructor(data?: PartialMessage<ListNursePatientsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListNursePatientsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNursePatientsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNursePatientsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNursePatientsResponse;

  static equals(a: ListNursePatientsResponse | PlainMessage<ListNursePatientsResponse> | undefined, b: ListNursePatientsResponse | PlainMessage<ListNursePatientsResponse> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListPatientsNotAssignedToNurseRequest
 */
export declare class ListPatientsNotAssignedToNurseRequest extends Message<ListPatientsNotAssignedToNurseRequest> {
  /**
   * @generated from field: string nurse_id = 1;
   */
  nurseId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<ListPatientsNotAssignedToNurseRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListPatientsNotAssignedToNurseRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPatientsNotAssignedToNurseRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPatientsNotAssignedToNurseRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPatientsNotAssignedToNurseRequest;

  static equals(a: ListPatientsNotAssignedToNurseRequest | PlainMessage<ListPatientsNotAssignedToNurseRequest> | undefined, b: ListPatientsNotAssignedToNurseRequest | PlainMessage<ListPatientsNotAssignedToNurseRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListPatientsNotAssignedToNurseResponse
 */
export declare class ListPatientsNotAssignedToNurseResponse extends Message<ListPatientsNotAssignedToNurseResponse> {
  /**
   * @generated from field: repeated patient.v1.ListedPatient patients = 1;
   */
  patients: ListedPatient[];

  constructor(data?: PartialMessage<ListPatientsNotAssignedToNurseResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListPatientsNotAssignedToNurseResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPatientsNotAssignedToNurseResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPatientsNotAssignedToNurseResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPatientsNotAssignedToNurseResponse;

  static equals(a: ListPatientsNotAssignedToNurseResponse | PlainMessage<ListPatientsNotAssignedToNurseResponse> | undefined, b: ListPatientsNotAssignedToNurseResponse | PlainMessage<ListPatientsNotAssignedToNurseResponse> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListNursesNotAssignedToPatientRequest
 */
export declare class ListNursesNotAssignedToPatientRequest extends Message<ListNursesNotAssignedToPatientRequest> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<ListNursesNotAssignedToPatientRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListNursesNotAssignedToPatientRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNursesNotAssignedToPatientRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNursesNotAssignedToPatientRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNursesNotAssignedToPatientRequest;

  static equals(a: ListNursesNotAssignedToPatientRequest | PlainMessage<ListNursesNotAssignedToPatientRequest> | undefined, b: ListNursesNotAssignedToPatientRequest | PlainMessage<ListNursesNotAssignedToPatientRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.ListNursesNotAssignedToPatientResponse
 */
export declare class ListNursesNotAssignedToPatientResponse extends Message<ListNursesNotAssignedToPatientResponse> {
  /**
   * @generated from field: repeated patient.v1.ListedNurse nurses = 1;
   */
  nurses: ListedNurse[];

  constructor(data?: PartialMessage<ListNursesNotAssignedToPatientResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.ListNursesNotAssignedToPatientResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNursesNotAssignedToPatientResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNursesNotAssignedToPatientResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNursesNotAssignedToPatientResponse;

  static equals(a: ListNursesNotAssignedToPatientResponse | PlainMessage<ListNursesNotAssignedToPatientResponse> | undefined, b: ListNursesNotAssignedToPatientResponse | PlainMessage<ListNursesNotAssignedToPatientResponse> | undefined): boolean;
}

/**
 * @generated from message patient.v1.AssignPatientToNurseRequest
 */
export declare class AssignPatientToNurseRequest extends Message<AssignPatientToNurseRequest> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  /**
   * @generated from field: string nurse_id = 2;
   */
  nurseId: string;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<AssignPatientToNurseRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.AssignPatientToNurseRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignPatientToNurseRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignPatientToNurseRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignPatientToNurseRequest;

  static equals(a: AssignPatientToNurseRequest | PlainMessage<AssignPatientToNurseRequest> | undefined, b: AssignPatientToNurseRequest | PlainMessage<AssignPatientToNurseRequest> | undefined): boolean;
}

/**
 * @generated from message patient.v1.UnassignPatientToNurseRequest
 */
export declare class UnassignPatientToNurseRequest extends Message<UnassignPatientToNurseRequest> {
  /**
   * @generated from field: string patient_id = 1;
   */
  patientId: string;

  /**
   * @generated from field: string nurse_id = 2;
   */
  nurseId: string;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<UnassignPatientToNurseRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "patient.v1.UnassignPatientToNurseRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnassignPatientToNurseRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnassignPatientToNurseRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnassignPatientToNurseRequest;

  static equals(a: UnassignPatientToNurseRequest | PlainMessage<UnassignPatientToNurseRequest> | undefined, b: UnassignPatientToNurseRequest | PlainMessage<UnassignPatientToNurseRequest> | undefined): boolean;
}

