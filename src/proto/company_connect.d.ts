// @generated by protoc-gen-connect-es v1.4.0
// @generated from file company.proto (package company.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateBillingPortalSessionRequest, CreateBillingPortalSessionResponse, CreateCheckoutSessionRequest, CreateCheckoutSessionResponse, CreateCompanyRequest, CreateCompanyResponse, DemoteAdminRequest, GetCompanyBillingRequest, GetCompanyBillingResponse, GetCompanyByCodeRequest, GetCompanyByCodeResponse, GetCompanyByIDRequest, GetCompanyByIDResponse, GetCompanyStatsRequest, GetCompanyStatsResponse, GetEstimatedSubscriptionCostRequest, GetEstimatedSubscriptionCostResponse, PromoteAdminRequest, UpdateCompanyRequest } from "./company_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service company.v1.CompanyService
 */
export declare const CompanyService: {
  readonly typeName: "company.v1.CompanyService",
  readonly methods: {
    /**
     * @generated from rpc company.v1.CompanyService.CreateCompany
     */
    readonly createCompany: {
      readonly name: "CreateCompany",
      readonly I: typeof CreateCompanyRequest,
      readonly O: typeof CreateCompanyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc company.v1.CompanyService.UpdateCompany
     */
    readonly updateCompany: {
      readonly name: "UpdateCompany",
      readonly I: typeof UpdateCompanyRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc company.v1.CompanyService.GetCompanyByCode
     */
    readonly getCompanyByCode: {
      readonly name: "GetCompanyByCode",
      readonly I: typeof GetCompanyByCodeRequest,
      readonly O: typeof GetCompanyByCodeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc company.v1.CompanyService.GetCompanyByID
     */
    readonly getCompanyByID: {
      readonly name: "GetCompanyByID",
      readonly I: typeof GetCompanyByIDRequest,
      readonly O: typeof GetCompanyByIDResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc company.v1.CompanyService.GetCompanyStats
     */
    readonly getCompanyStats: {
      readonly name: "GetCompanyStats",
      readonly I: typeof GetCompanyStatsRequest,
      readonly O: typeof GetCompanyStatsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc company.v1.CompanyService.GetCompanyBilling
     */
    readonly getCompanyBilling: {
      readonly name: "GetCompanyBilling",
      readonly I: typeof GetCompanyBillingRequest,
      readonly O: typeof GetCompanyBillingResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc company.v1.CompanyService.GetEstimatedSubscriptionCost
     */
    readonly getEstimatedSubscriptionCost: {
      readonly name: "GetEstimatedSubscriptionCost",
      readonly I: typeof GetEstimatedSubscriptionCostRequest,
      readonly O: typeof GetEstimatedSubscriptionCostResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc company.v1.CompanyService.PromoteAdmin
     */
    readonly promoteAdmin: {
      readonly name: "PromoteAdmin",
      readonly I: typeof PromoteAdminRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc company.v1.CompanyService.DemoteAdmin
     */
    readonly demoteAdmin: {
      readonly name: "DemoteAdmin",
      readonly I: typeof DemoteAdminRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc company.v1.CompanyService.CreateCheckoutSession
     */
    readonly createCheckoutSession: {
      readonly name: "CreateCheckoutSession",
      readonly I: typeof CreateCheckoutSessionRequest,
      readonly O: typeof CreateCheckoutSessionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc company.v1.CompanyService.CreateBillingPortalSession
     */
    readonly createBillingPortalSession: {
      readonly name: "CreateBillingPortalSession",
      readonly I: typeof CreateBillingPortalSessionRequest,
      readonly O: typeof CreateBillingPortalSessionResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

