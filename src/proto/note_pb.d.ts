// @generated by protoc-gen-es v1.7.2
// @generated from file note.proto (package note.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { User } from "./user_pb.js";
import type { Goal } from "./patient_pb.js";

/**
 * @generated from enum note.v1.Health
 */
export declare enum Health {
  /**
   * @generated from enum value: UnspecifiedHealth = 0;
   */
  UnspecifiedHealth = 0,

  /**
   * @generated from enum value: Good = 1;
   */
  Good = 1,

  /**
   * @generated from enum value: Fair = 2;
   */
  Fair = 2,

  /**
   * @generated from enum value: Poor = 3;
   */
  Poor = 3,
}

/**
 * @generated from enum note.v1.MethodType
 */
export declare enum MethodType {
  /**
   * @generated from enum value: UnspecifiedMethod = 0;
   */
  UnspecifiedMethod = 0,

  /**
   * @generated from enum value: VerbalPrompt = 1;
   */
  VerbalPrompt = 1,

  /**
   * @generated from enum value: VisualQueue = 2;
   */
  VisualQueue = 2,

  /**
   * @generated from enum value: Gesture = 3;
   */
  Gesture = 3,

  /**
   * @generated from enum value: PhysicalPrompt = 4;
   */
  PhysicalPrompt = 4,

  /**
   * @generated from enum value: Shadowing = 5;
   */
  Shadowing = 5,

  /**
   * @generated from enum value: HandOverHand = 6;
   */
  HandOverHand = 6,

  /**
   * @generated from enum value: TotalAssist = 7;
   */
  TotalAssist = 7,
}

/**
 * @generated from enum note.v1.GoalProgress
 */
export declare enum GoalProgress {
  /**
   * @generated from enum value: UnspecifiedGoalProgress = 0;
   */
  UnspecifiedGoalProgress = 0,

  /**
   * @generated from enum value: Progressing = 1;
   */
  Progressing = 1,

  /**
   * @generated from enum value: Regressing = 2;
   */
  Regressing = 2,

  /**
   * @generated from enum value: Stagnant = 3;
   */
  Stagnant = 3,
}

/**
 * @generated from enum note.v1.HealthAndSafetyStep
 */
export declare enum HealthAndSafetyStep {
  /**
   * @generated from enum value: UnspecifiedHealthAndSafetyStep = 0;
   */
  UnspecifiedHealthAndSafetyStep = 0,

  /**
   * @generated from enum value: ConstantSupervision = 1;
   */
  ConstantSupervision = 1,

  /**
   * @generated from enum value: OneOnOneMonitoring = 2;
   */
  OneOnOneMonitoring = 2,

  /**
   * @generated from enum value: SafeStreetNavigation = 3;
   */
  SafeStreetNavigation = 3,

  /**
   * @generated from enum value: ProperHandHygiene = 4;
   */
  ProperHandHygiene = 4,

  /**
   * @generated from enum value: VehicleSafetyAwareness = 5;
   */
  VehicleSafetyAwareness = 5,

  /**
   * @generated from enum value: SafeEatingAndChokingPrevention = 6;
   */
  SafeEatingAndChokingPrevention = 6,

  /**
   * @generated from enum value: ProperUseOfEquipment = 7;
   */
  ProperUseOfEquipment = 7,

  /**
   * @generated from enum value: MedicationReminders = 8;
   */
  MedicationReminders = 8,

  /**
   * @generated from enum value: ReinforceCommunityEtiquette = 9;
   */
  ReinforceCommunityEtiquette = 9,

  /**
   * @generated from enum value: TeachingSelfAdvocacy = 10;
   */
  TeachingSelfAdvocacy = 10,

  /**
   * @generated from enum value: MedicalOrDentalAppointmentAssitance = 11;
   */
  MedicalOrDentalAppointmentAssitance = 11,

  /**
   * @generated from enum value: HouseholdChoresAndMaintenance = 12;
   */
  HouseholdChoresAndMaintenance = 12,

  /**
   * @generated from enum value: ProperShoppingAwareness = 13;
   */
  ProperShoppingAwareness = 13,
}

/**
 * @generated from message note.v1.Method
 */
export declare class Method extends Message<Method> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string event_id = 2;
   */
  eventId: string;

  /**
   * @generated from field: note.v1.MethodType method = 3;
   */
  method: MethodType;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Method>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.Method";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Method;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Method;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Method;

  static equals(a: Method | PlainMessage<Method> | undefined, b: Method | PlainMessage<Method> | undefined): boolean;
}

/**
 * @generated from message note.v1.Choice
 */
export declare class Choice extends Message<Choice> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string event_id = 2;
   */
  eventId: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Choice>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.Choice";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Choice;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Choice;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Choice;

  static equals(a: Choice | PlainMessage<Choice> | undefined, b: Choice | PlainMessage<Choice> | undefined): boolean;
}

/**
 * @generated from message note.v1.Event
 */
export declare class Event extends Message<Event> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string note_id = 2;
   */
  noteId: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: repeated note.v1.Method methods = 4;
   */
  methods: Method[];

  /**
   * @generated from field: repeated note.v1.Choice choices = 5;
   */
  choices: Choice[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Event>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.Event";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event;

  static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean;
}

/**
 * @generated from message note.v1.Step
 */
export declare class Step extends Message<Step> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string note_id = 2;
   */
  noteId: string;

  /**
   * @generated from field: note.v1.HealthAndSafetyStep step = 3;
   */
  step: HealthAndSafetyStep;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Step>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.Step";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Step;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Step;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Step;

  static equals(a: Step | PlainMessage<Step> | undefined, b: Step | PlainMessage<Step> | undefined): boolean;
}

/**
 * @generated from message note.v1.PartialPatient
 */
export declare class PartialPatient extends Message<PartialPatient> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: bool has_maladaptive_behaviors = 4;
   */
  hasMaladaptiveBehaviors: boolean;

  constructor(data?: PartialMessage<PartialPatient>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.PartialPatient";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PartialPatient;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PartialPatient;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PartialPatient;

  static equals(a: PartialPatient | PlainMessage<PartialPatient> | undefined, b: PartialPatient | PlainMessage<PartialPatient> | undefined): boolean;
}

/**
 * @generated from message note.v1.Note
 */
export declare class Note extends Message<Note> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: user.v1.User nurse = 2;
   */
  nurse?: User;

  /**
   * @generated from field: note.v1.PartialPatient patient = 3;
   */
  patient?: PartialPatient;

  /**
   * @generated from field: google.protobuf.Timestamp date = 5;
   */
  date?: Timestamp;

  /**
   * @generated from field: note.v1.Health physical_health = 6;
   */
  physicalHealth: Health;

  /**
   * @generated from field: note.v1.Health emotional_health = 7;
   */
  emotionalHealth: Health;

  /**
   * @generated from field: optional bool exhibited_maladaptive_behavior = 8;
   */
  exhibitedMaladaptiveBehavior?: boolean;

  /**
   * @generated from field: optional string behavior_description = 9;
   */
  behaviorDescription?: string;

  /**
   * @generated from field: patient.v1.Goal goal = 10;
   */
  goal?: Goal;

  /**
   * @generated from field: note.v1.GoalProgress goal_progress = 11;
   */
  goalProgress: GoalProgress;

  /**
   * @generated from field: repeated note.v1.Event events = 12;
   */
  events: Event[];

  /**
   * @generated from field: repeated note.v1.Step steps = 13;
   */
  steps: Step[];

  /**
   * @generated from field: bool discussed_monthly_education = 14;
   */
  discussedMonthlyEducation: boolean;

  /**
   * @generated from field: optional string additional_info = 15;
   */
  additionalInfo?: string;

  /**
   * @generated from field: optional string generated_content = 16;
   */
  generatedContent?: string;

  /**
   * @generated from field: int32 generated_count = 17;
   */
  generatedCount: number;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 18;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 19;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Note>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.Note";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Note;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Note;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Note;

  static equals(a: Note | PlainMessage<Note> | undefined, b: Note | PlainMessage<Note> | undefined): boolean;
}

/**
 * @generated from message note.v1.EventInput
 */
export declare class EventInput extends Message<EventInput> {
  /**
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * @generated from field: repeated note.v1.MethodType methods = 2;
   */
  methods: MethodType[];

  /**
   * @generated from field: repeated string choices = 3;
   */
  choices: string[];

  constructor(data?: PartialMessage<EventInput>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.EventInput";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventInput;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventInput;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventInput;

  static equals(a: EventInput | PlainMessage<EventInput> | undefined, b: EventInput | PlainMessage<EventInput> | undefined): boolean;
}

/**
 * @generated from message note.v1.CreateNoteRequest
 */
export declare class CreateNoteRequest extends Message<CreateNoteRequest> {
  /**
   * @generated from field: optional string note_id = 1;
   */
  noteId?: string;

  /**
   * @generated from field: string patient_id = 2;
   */
  patientId: string;

  /**
   * @generated from field: google.protobuf.Timestamp date = 3;
   */
  date?: Timestamp;

  /**
   * @generated from field: note.v1.Health physical_health = 4;
   */
  physicalHealth: Health;

  /**
   * @generated from field: note.v1.Health emotional_health = 5;
   */
  emotionalHealth: Health;

  /**
   * @generated from field: optional bool exhibited_maladaptive_behavior = 6;
   */
  exhibitedMaladaptiveBehavior?: boolean;

  /**
   * @generated from field: optional string behavior_description = 7;
   */
  behaviorDescription?: string;

  /**
   * @generated from field: string goal_id = 8;
   */
  goalId: string;

  /**
   * @generated from field: note.v1.GoalProgress goal_progress = 9;
   */
  goalProgress: GoalProgress;

  /**
   * @generated from field: bool discussed_monthly_education = 10;
   */
  discussedMonthlyEducation: boolean;

  /**
   * @generated from field: optional string additional_info = 11;
   */
  additionalInfo?: string;

  /**
   * @generated from field: repeated note.v1.EventInput events = 12;
   */
  events: EventInput[];

  /**
   * @generated from field: repeated note.v1.HealthAndSafetyStep steps = 13;
   */
  steps: HealthAndSafetyStep[];

  /**
   * @generated from field: string token = 14;
   */
  token: string;

  constructor(data?: PartialMessage<CreateNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.CreateNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateNoteRequest;

  static equals(a: CreateNoteRequest | PlainMessage<CreateNoteRequest> | undefined, b: CreateNoteRequest | PlainMessage<CreateNoteRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.CreateNoteResponse
 */
export declare class CreateNoteResponse extends Message<CreateNoteResponse> {
  /**
   * @generated from field: string note_id = 1;
   */
  noteId: string;

  constructor(data?: PartialMessage<CreateNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.CreateNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateNoteResponse;

  static equals(a: CreateNoteResponse | PlainMessage<CreateNoteResponse> | undefined, b: CreateNoteResponse | PlainMessage<CreateNoteResponse> | undefined): boolean;
}

/**
 * @generated from message note.v1.UpdateNoteRequest
 */
export declare class UpdateNoteRequest extends Message<UpdateNoteRequest> {
  /**
   * @generated from field: string note_id = 1;
   */
  noteId: string;

  /**
   * @generated from field: optional google.protobuf.Timestamp date = 2;
   */
  date?: Timestamp;

  /**
   * @generated from field: optional note.v1.Health physical_health = 3;
   */
  physicalHealth?: Health;

  /**
   * @generated from field: optional note.v1.Health emotional_health = 4;
   */
  emotionalHealth?: Health;

  /**
   * @generated from field: optional bool exhibited_maladaptive_behavior = 5;
   */
  exhibitedMaladaptiveBehavior?: boolean;

  /**
   * @generated from field: optional string behavior_description = 6;
   */
  behaviorDescription?: string;

  /**
   * @generated from field: optional string goal_id = 7;
   */
  goalId?: string;

  /**
   * @generated from field: optional note.v1.GoalProgress goal_progress = 8;
   */
  goalProgress?: GoalProgress;

  /**
   * @generated from field: optional bool discussed_monthly_education = 9;
   */
  discussedMonthlyEducation?: boolean;

  /**
   * @generated from field: optional string additional_info = 10;
   */
  additionalInfo?: string;

  /**
   * @generated from field: string token = 11;
   */
  token: string;

  constructor(data?: PartialMessage<UpdateNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.UpdateNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateNoteRequest;

  static equals(a: UpdateNoteRequest | PlainMessage<UpdateNoteRequest> | undefined, b: UpdateNoteRequest | PlainMessage<UpdateNoteRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.DeleteNoteRequest
 */
export declare class DeleteNoteRequest extends Message<DeleteNoteRequest> {
  /**
   * @generated from field: string note_id = 1;
   */
  noteId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<DeleteNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.DeleteNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteNoteRequest;

  static equals(a: DeleteNoteRequest | PlainMessage<DeleteNoteRequest> | undefined, b: DeleteNoteRequest | PlainMessage<DeleteNoteRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.GetNoteRequest
 */
export declare class GetNoteRequest extends Message<GetNoteRequest> {
  /**
   * @generated from field: string note_id = 1;
   */
  noteId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<GetNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.GetNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNoteRequest;

  static equals(a: GetNoteRequest | PlainMessage<GetNoteRequest> | undefined, b: GetNoteRequest | PlainMessage<GetNoteRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.GetNoteResponse
 */
export declare class GetNoteResponse extends Message<GetNoteResponse> {
  /**
   * @generated from field: note.v1.Note note = 1;
   */
  note?: Note;

  constructor(data?: PartialMessage<GetNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.GetNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNoteResponse;

  static equals(a: GetNoteResponse | PlainMessage<GetNoteResponse> | undefined, b: GetNoteResponse | PlainMessage<GetNoteResponse> | undefined): boolean;
}

/**
 * @generated from message note.v1.GenerateNoteContentRequest
 */
export declare class GenerateNoteContentRequest extends Message<GenerateNoteContentRequest> {
  /**
   * @generated from field: string note_id = 1;
   */
  noteId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<GenerateNoteContentRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.GenerateNoteContentRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateNoteContentRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateNoteContentRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateNoteContentRequest;

  static equals(a: GenerateNoteContentRequest | PlainMessage<GenerateNoteContentRequest> | undefined, b: GenerateNoteContentRequest | PlainMessage<GenerateNoteContentRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.ListNotesRequest
 */
export declare class ListNotesRequest extends Message<ListNotesRequest> {
  /**
   * @generated from field: optional google.protobuf.Timestamp after_date = 1;
   */
  afterDate?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp before_date = 2;
   */
  beforeDate?: Timestamp;

  /**
   * @generated from field: optional string patient_first_name = 3;
   */
  patientFirstName?: string;

  /**
   * @generated from field: optional string patient_last_name = 4;
   */
  patientLastName?: string;

  /**
   * @generated from field: optional string nurse_name = 5;
   */
  nurseName?: string;

  /**
   * @generated from field: optional int32 page = 6;
   */
  page?: number;

  /**
   * @generated from field: bool order_by_asc = 7;
   */
  orderByAsc: boolean;

  /**
   * @generated from field: string token = 8;
   */
  token: string;

  constructor(data?: PartialMessage<ListNotesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.ListNotesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNotesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNotesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNotesRequest;

  static equals(a: ListNotesRequest | PlainMessage<ListNotesRequest> | undefined, b: ListNotesRequest | PlainMessage<ListNotesRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.ListedNote
 */
export declare class ListedNote extends Message<ListedNote> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string patient_first_name = 2;
   */
  patientFirstName: string;

  /**
   * @generated from field: string patient_last_name = 3;
   */
  patientLastName: string;

  /**
   * @generated from field: string nurse_id = 4;
   */
  nurseId: string;

  /**
   * @generated from field: string nurse_name = 5;
   */
  nurseName: string;

  /**
   * @generated from field: google.protobuf.Timestamp date = 6;
   */
  date?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 7;
   */
  createdAt?: Timestamp;

  constructor(data?: PartialMessage<ListedNote>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.ListedNote";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListedNote;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListedNote;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListedNote;

  static equals(a: ListedNote | PlainMessage<ListedNote> | undefined, b: ListedNote | PlainMessage<ListedNote> | undefined): boolean;
}

/**
 * @generated from message note.v1.ListNotesResponse
 */
export declare class ListNotesResponse extends Message<ListNotesResponse> {
  /**
   * @generated from field: repeated note.v1.ListedNote notes = 1;
   */
  notes: ListedNote[];

  /**
   * @generated from field: int32 total = 2;
   */
  total: number;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: optional int32 next_page = 4;
   */
  nextPage?: number;

  constructor(data?: PartialMessage<ListNotesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.ListNotesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNotesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNotesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNotesResponse;

  static equals(a: ListNotesResponse | PlainMessage<ListNotesResponse> | undefined, b: ListNotesResponse | PlainMessage<ListNotesResponse> | undefined): boolean;
}

/**
 * @generated from message note.v1.ListNurseNotesRequest
 */
export declare class ListNurseNotesRequest extends Message<ListNurseNotesRequest> {
  /**
   * @generated from field: string nurse_id = 1;
   */
  nurseId: string;

  /**
   * @generated from field: optional int32 page = 2;
   */
  page?: number;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<ListNurseNotesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.ListNurseNotesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNurseNotesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNurseNotesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNurseNotesRequest;

  static equals(a: ListNurseNotesRequest | PlainMessage<ListNurseNotesRequest> | undefined, b: ListNurseNotesRequest | PlainMessage<ListNurseNotesRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.ListNurseNotesResponse
 */
export declare class ListNurseNotesResponse extends Message<ListNurseNotesResponse> {
  /**
   * @generated from field: repeated note.v1.ListedNote notes = 1;
   */
  notes: ListedNote[];

  /**
   * @generated from field: int32 total = 2;
   */
  total: number;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: optional int32 next_page = 4;
   */
  nextPage?: number;

  constructor(data?: PartialMessage<ListNurseNotesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.ListNurseNotesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNurseNotesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNurseNotesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNurseNotesResponse;

  static equals(a: ListNurseNotesResponse | PlainMessage<ListNurseNotesResponse> | undefined, b: ListNurseNotesResponse | PlainMessage<ListNurseNotesResponse> | undefined): boolean;
}

/**
 * @generated from message note.v1.AddEventRequest
 */
export declare class AddEventRequest extends Message<AddEventRequest> {
  /**
   * @generated from field: string note_id = 1;
   */
  noteId: string;

  /**
   * @generated from field: note.v1.EventInput event = 2;
   */
  event?: EventInput;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<AddEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.AddEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddEventRequest;

  static equals(a: AddEventRequest | PlainMessage<AddEventRequest> | undefined, b: AddEventRequest | PlainMessage<AddEventRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.RemoveEventRequest
 */
export declare class RemoveEventRequest extends Message<RemoveEventRequest> {
  /**
   * @generated from field: string event_id = 2;
   */
  eventId: string;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<RemoveEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.RemoveEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveEventRequest;

  static equals(a: RemoveEventRequest | PlainMessage<RemoveEventRequest> | undefined, b: RemoveEventRequest | PlainMessage<RemoveEventRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.UpdateEventDescriptionRequest
 */
export declare class UpdateEventDescriptionRequest extends Message<UpdateEventDescriptionRequest> {
  /**
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * @generated from field: string new_description = 2;
   */
  newDescription: string;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<UpdateEventDescriptionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.UpdateEventDescriptionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateEventDescriptionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateEventDescriptionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateEventDescriptionRequest;

  static equals(a: UpdateEventDescriptionRequest | PlainMessage<UpdateEventDescriptionRequest> | undefined, b: UpdateEventDescriptionRequest | PlainMessage<UpdateEventDescriptionRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.AddChoiceToEventRequest
 */
export declare class AddChoiceToEventRequest extends Message<AddChoiceToEventRequest> {
  /**
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<AddChoiceToEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.AddChoiceToEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddChoiceToEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddChoiceToEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddChoiceToEventRequest;

  static equals(a: AddChoiceToEventRequest | PlainMessage<AddChoiceToEventRequest> | undefined, b: AddChoiceToEventRequest | PlainMessage<AddChoiceToEventRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.RemoveChoiceFromEventRequest
 */
export declare class RemoveChoiceFromEventRequest extends Message<RemoveChoiceFromEventRequest> {
  /**
   * @generated from field: string choice_id = 1;
   */
  choiceId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<RemoveChoiceFromEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.RemoveChoiceFromEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveChoiceFromEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveChoiceFromEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveChoiceFromEventRequest;

  static equals(a: RemoveChoiceFromEventRequest | PlainMessage<RemoveChoiceFromEventRequest> | undefined, b: RemoveChoiceFromEventRequest | PlainMessage<RemoveChoiceFromEventRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.UpdateChoiceInEventRequest
 */
export declare class UpdateChoiceInEventRequest extends Message<UpdateChoiceInEventRequest> {
  /**
   * @generated from field: string choice_id = 1;
   */
  choiceId: string;

  /**
   * @generated from field: string new_description = 2;
   */
  newDescription: string;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<UpdateChoiceInEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.UpdateChoiceInEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateChoiceInEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateChoiceInEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateChoiceInEventRequest;

  static equals(a: UpdateChoiceInEventRequest | PlainMessage<UpdateChoiceInEventRequest> | undefined, b: UpdateChoiceInEventRequest | PlainMessage<UpdateChoiceInEventRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.AddMethodToEventRequest
 */
export declare class AddMethodToEventRequest extends Message<AddMethodToEventRequest> {
  /**
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * @generated from field: note.v1.MethodType method = 2;
   */
  method: MethodType;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<AddMethodToEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.AddMethodToEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddMethodToEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddMethodToEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddMethodToEventRequest;

  static equals(a: AddMethodToEventRequest | PlainMessage<AddMethodToEventRequest> | undefined, b: AddMethodToEventRequest | PlainMessage<AddMethodToEventRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.RemoveMethodFromEventRequest
 */
export declare class RemoveMethodFromEventRequest extends Message<RemoveMethodFromEventRequest> {
  /**
   * @generated from field: string method_id = 1;
   */
  methodId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<RemoveMethodFromEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.RemoveMethodFromEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMethodFromEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMethodFromEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMethodFromEventRequest;

  static equals(a: RemoveMethodFromEventRequest | PlainMessage<RemoveMethodFromEventRequest> | undefined, b: RemoveMethodFromEventRequest | PlainMessage<RemoveMethodFromEventRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.AddStepRequest
 */
export declare class AddStepRequest extends Message<AddStepRequest> {
  /**
   * @generated from field: string note_id = 1;
   */
  noteId: string;

  /**
   * @generated from field: note.v1.HealthAndSafetyStep step = 2;
   */
  step: HealthAndSafetyStep;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  constructor(data?: PartialMessage<AddStepRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.AddStepRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddStepRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddStepRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddStepRequest;

  static equals(a: AddStepRequest | PlainMessage<AddStepRequest> | undefined, b: AddStepRequest | PlainMessage<AddStepRequest> | undefined): boolean;
}

/**
 * @generated from message note.v1.RemoveStepRequest
 */
export declare class RemoveStepRequest extends Message<RemoveStepRequest> {
  /**
   * @generated from field: string step_id = 1;
   */
  stepId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<RemoveStepRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "note.v1.RemoveStepRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveStepRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveStepRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveStepRequest;

  static equals(a: RemoveStepRequest | PlainMessage<RemoveStepRequest> | undefined, b: RemoveStepRequest | PlainMessage<RemoveStepRequest> | undefined): boolean;
}

