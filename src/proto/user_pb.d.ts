// @generated by protoc-gen-es v1.7.2
// @generated from file user.proto (package user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Empty, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum user.v1.Status
 */
export declare enum Status {
  /**
   * @generated from enum value: UnspecifiedStatus = 0;
   */
  UnspecifiedStatus = 0,

  /**
   * @generated from enum value: Pending = 1;
   */
  Pending = 1,

  /**
   * @generated from enum value: Accepted = 2;
   */
  Accepted = 2,

  /**
   * @generated from enum value: Rejected = 3;
   */
  Rejected = 3,
}

/**
 * @generated from enum user.v1.Role
 */
export declare enum Role {
  /**
   * @generated from enum value: UnspecifiedRole = 0;
   */
  UnspecifiedRole = 0,

  /**
   * @generated from enum value: SuperAdmin = 1;
   */
  SuperAdmin = 1,

  /**
   * @generated from enum value: Admin = 2;
   */
  Admin = 2,

  /**
   * @generated from enum value: Nurse = 3;
   */
  Nurse = 3,
}

/**
 * @generated from message user.v1.User
 */
export declare class User extends Message<User> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: string email = 4;
   */
  email: string;

  /**
   * @generated from field: bool email_verified = 5;
   */
  emailVerified: boolean;

  /**
   * @generated from field: user.v1.Status status = 6;
   */
  status: Status;

  /**
   * @generated from field: user.v1.Role role = 7;
   */
  role: Role;

  /**
   * @generated from field: string company_id = 8;
   */
  companyId: string;

  /**
   * @generated from field: bool is_active = 9;
   */
  isActive: boolean;

  /**
   * @generated from field: bool is_licensed = 10;
   */
  isLicensed: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 11;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 12;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<User>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.User";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User;

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean;
}

/**
 * @generated from message user.v1.GetUserRequest
 */
export declare class GetUserRequest extends Message<GetUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<GetUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.GetUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserRequest;

  static equals(a: GetUserRequest | PlainMessage<GetUserRequest> | undefined, b: GetUserRequest | PlainMessage<GetUserRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.PartialPatient
 */
export declare class PartialPatient extends Message<PartialPatient> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  constructor(data?: PartialMessage<PartialPatient>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.PartialPatient";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PartialPatient;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PartialPatient;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PartialPatient;

  static equals(a: PartialPatient | PlainMessage<PartialPatient> | undefined, b: PartialPatient | PlainMessage<PartialPatient> | undefined): boolean;
}

/**
 * @generated from message user.v1.GetUserResponse
 */
export declare class GetUserResponse extends Message<GetUserResponse> {
  /**
   * @generated from field: user.v1.User user = 1;
   */
  user?: User;

  /**
   * @generated from field: repeated user.v1.PartialPatient patients = 2;
   */
  patients: PartialPatient[];

  constructor(data?: PartialMessage<GetUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.GetUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserResponse;

  static equals(a: GetUserResponse | PlainMessage<GetUserResponse> | undefined, b: GetUserResponse | PlainMessage<GetUserResponse> | undefined): boolean;
}

/**
 * @generated from message user.v1.UpdateUserRequest
 */
export declare class UpdateUserRequest extends Message<UpdateUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string username = 3;
   */
  username?: string;

  /**
   * @generated from field: string token = 7;
   */
  token: string;

  constructor(data?: PartialMessage<UpdateUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.UpdateUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserRequest;

  static equals(a: UpdateUserRequest | PlainMessage<UpdateUserRequest> | undefined, b: UpdateUserRequest | PlainMessage<UpdateUserRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.ChangeUserPasswordRequest
 */
export declare class ChangeUserPasswordRequest extends Message<ChangeUserPasswordRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * isn't required if an admin is changing the password
   *
   * @generated from field: optional string current_password = 2;
   */
  currentPassword?: string;

  /**
   * @generated from field: string new_password = 3;
   */
  newPassword: string;

  /**
   * @generated from field: string token = 4;
   */
  token: string;

  constructor(data?: PartialMessage<ChangeUserPasswordRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.ChangeUserPasswordRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChangeUserPasswordRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChangeUserPasswordRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChangeUserPasswordRequest;

  static equals(a: ChangeUserPasswordRequest | PlainMessage<ChangeUserPasswordRequest> | undefined, b: ChangeUserPasswordRequest | PlainMessage<ChangeUserPasswordRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.ChangeUserPasswordWResetTokenRequest
 */
export declare class ChangeUserPasswordWResetTokenRequest extends Message<ChangeUserPasswordWResetTokenRequest> {
  /**
   * @generated from field: string reset_token = 1;
   */
  resetToken: string;

  /**
   * @generated from field: string new_password = 2;
   */
  newPassword: string;

  constructor(data?: PartialMessage<ChangeUserPasswordWResetTokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.ChangeUserPasswordWResetTokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChangeUserPasswordWResetTokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChangeUserPasswordWResetTokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChangeUserPasswordWResetTokenRequest;

  static equals(a: ChangeUserPasswordWResetTokenRequest | PlainMessage<ChangeUserPasswordWResetTokenRequest> | undefined, b: ChangeUserPasswordWResetTokenRequest | PlainMessage<ChangeUserPasswordWResetTokenRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.DeleteUserRequest
 */
export declare class DeleteUserRequest extends Message<DeleteUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<DeleteUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.DeleteUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserRequest;

  static equals(a: DeleteUserRequest | PlainMessage<DeleteUserRequest> | undefined, b: DeleteUserRequest | PlainMessage<DeleteUserRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.ListUsersRequest
 */
export declare class ListUsersRequest extends Message<ListUsersRequest> {
  /**
   * @generated from field: optional string full_name = 1;
   */
  fullName?: string;

  /**
   * @generated from field: optional string username = 2;
   */
  username?: string;

  /**
   * @generated from field: optional user.v1.Status status = 3;
   */
  status?: Status;

  /**
   * @generated from field: optional user.v1.Role role = 4;
   */
  role?: Role;

  /**
   * @generated from field: optional bool is_active = 5;
   */
  isActive?: boolean;

  /**
   * @generated from field: optional int32 page = 6;
   */
  page?: number;

  /**
   * @generated from field: string token = 7;
   */
  token: string;

  constructor(data?: PartialMessage<ListUsersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.ListUsersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersRequest;

  static equals(a: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined, b: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.ListUsersResponse
 */
export declare class ListUsersResponse extends Message<ListUsersResponse> {
  /**
   * @generated from field: repeated user.v1.User users = 1;
   */
  users: User[];

  /**
   * @generated from field: int32 total = 2;
   */
  total: number;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: optional int32 next_page = 4;
   */
  nextPage?: number;

  constructor(data?: PartialMessage<ListUsersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.ListUsersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersResponse;

  static equals(a: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined, b: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined): boolean;
}

/**
 * @generated from message user.v1.SearchUsersRequest
 */
export declare class SearchUsersRequest extends Message<SearchUsersRequest> {
  /**
   * @generated from field: string full_name_query = 1;
   */
  fullNameQuery: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<SearchUsersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.SearchUsersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchUsersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchUsersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchUsersRequest;

  static equals(a: SearchUsersRequest | PlainMessage<SearchUsersRequest> | undefined, b: SearchUsersRequest | PlainMessage<SearchUsersRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.SearchedUser
 */
export declare class SearchedUser extends Message<SearchedUser> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string full_name = 2;
   */
  fullName: string;

  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: user.v1.Role role = 4;
   */
  role: Role;

  constructor(data?: PartialMessage<SearchedUser>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.SearchedUser";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchedUser;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchedUser;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchedUser;

  static equals(a: SearchedUser | PlainMessage<SearchedUser> | undefined, b: SearchedUser | PlainMessage<SearchedUser> | undefined): boolean;
}

/**
 * @generated from message user.v1.SearchUsersResponse
 */
export declare class SearchUsersResponse extends Message<SearchUsersResponse> {
  /**
   * @generated from field: repeated user.v1.SearchedUser users = 1;
   */
  users: SearchedUser[];

  constructor(data?: PartialMessage<SearchUsersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.SearchUsersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchUsersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchUsersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchUsersResponse;

  static equals(a: SearchUsersResponse | PlainMessage<SearchUsersResponse> | undefined, b: SearchUsersResponse | PlainMessage<SearchUsersResponse> | undefined): boolean;
}

/**
 * @generated from message user.v1.ListPendingNursesRequest
 */
export declare class ListPendingNursesRequest extends Message<ListPendingNursesRequest> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * hacky way to target this rpc with interceptor
   *
   * @generated from field: optional google.protobuf.Empty ignore_status = 2;
   */
  ignoreStatus?: Empty;

  constructor(data?: PartialMessage<ListPendingNursesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.ListPendingNursesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPendingNursesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPendingNursesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPendingNursesRequest;

  static equals(a: ListPendingNursesRequest | PlainMessage<ListPendingNursesRequest> | undefined, b: ListPendingNursesRequest | PlainMessage<ListPendingNursesRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.ListPendingNursesResponse
 */
export declare class ListPendingNursesResponse extends Message<ListPendingNursesResponse> {
  /**
   * @generated from field: repeated user.v1.User nurses = 1;
   */
  nurses: User[];

  constructor(data?: PartialMessage<ListPendingNursesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.ListPendingNursesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPendingNursesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPendingNursesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPendingNursesResponse;

  static equals(a: ListPendingNursesResponse | PlainMessage<ListPendingNursesResponse> | undefined, b: ListPendingNursesResponse | PlainMessage<ListPendingNursesResponse> | undefined): boolean;
}

/**
 * @generated from message user.v1.ApproveNurseRequest
 */
export declare class ApproveNurseRequest extends Message<ApproveNurseRequest> {
  /**
   * @generated from field: string nurse_id = 1;
   */
  nurseId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<ApproveNurseRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.ApproveNurseRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApproveNurseRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApproveNurseRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApproveNurseRequest;

  static equals(a: ApproveNurseRequest | PlainMessage<ApproveNurseRequest> | undefined, b: ApproveNurseRequest | PlainMessage<ApproveNurseRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.RejectNurseRequest
 */
export declare class RejectNurseRequest extends Message<RejectNurseRequest> {
  /**
   * @generated from field: string nurse_id = 1;
   */
  nurseId: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<RejectNurseRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.RejectNurseRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RejectNurseRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RejectNurseRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RejectNurseRequest;

  static equals(a: RejectNurseRequest | PlainMessage<RejectNurseRequest> | undefined, b: RejectNurseRequest | PlainMessage<RejectNurseRequest> | undefined): boolean;
}

